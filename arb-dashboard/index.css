:root {
    --bg-dark: #1a1a1a;
    --bg-darker: #121212;
    --text-primary: #ffffff;
    --text-secondary: #b3b3b3;
    --accent: #2196f3;
    --success: #4caf50;
    --border: #333;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Segoe UI', system-ui, sans-serif;
    background-color: var(--bg-darker);
    color: var(--text-primary);
    line-height: 1.6;
}

.dashboard {
    padding: 2rem;
    max-width: 1400px;
    margin: 0 auto;
}

.header {
    margin-bottom: 2rem;
}

.stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
    margin-bottom: 2rem;
}

.stat-card {
    background-color: var(--bg-dark);
    padding: 1.5rem;
    border-radius: 8px;
    border: 1px solid var(--border);
}

.stat-label {
    color: var(--text-secondary);
    font-size: 0.9rem;
    margin-bottom: 0.5rem;
}

.stat-value {
    font-size: 1.5rem;
    font-weight: bold;
}

.positive {
    color: var(--success);
}

.table-container {
    background-color: var(--bg-dark);
    border-radius: 8px;
    border: 1px solid var(--border);
    overflow: auto;
}

table {
    width: 100%;
    border-collapse: collapse;
    font-size: 0.9rem;
}

th {
    background-color: var(--bg-darker);
    padding: 1rem;
    text-align: left;
    font-weight: 600;
    color: var(--text-secondary);
    position: sticky;
    top: 0;
    z-index: 1;
}

td {
    padding: 1rem;
    border-bottom: 1px solid var(--border);
}

tr:hover {
    background-color: rgba(255, 255, 255, 0.05);
}

.profit {
    font-weight: 600;
}

.sportsbook {
    display: inline-block;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.85rem;
    background-color: rgba(255, 255, 255, 0.1);
}

.loading {
    text-align: center;
    padding: 20px;
    color: var(--text-secondary);
}

.error {
    color: #ff4444;
    padding: 10px;
    text-align: center;
    background-color: rgba(255, 68, 68, 0.1);
    border-radius: 4px;
    margin: 1rem 0;
    display: none;
}

tr.clickable {
    cursor: pointer;
}

tr.clickable:hover {
    background-color: rgba(255, 255, 255, 0.1);
}

.balances-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 1rem;
    margin-bottom: 2rem;
}

.balance-card {
    background-color: var(--bg-dark);
    padding: 1.5rem;
    border-radius: 8px;
    border: 1px solid var(--border);
}

.balance-label {
    color: var(--text-secondary);
    font-size: 0.9rem;
    margin-bottom: 0.5rem;
}

.balance-value {
    font-size: 1.3rem;
    font-weight: bold;
}

.total {
    background-color: var(--bg-darker);
}

.tab-container {
    margin-bottom: 2rem;
}

.tabs {
    display: flex;
    gap: 1rem;
    margin-bottom: 1rem;
}

.tab {
    padding: 0.75rem 1.5rem;
    background-color: var(--bg-dark);
    border: 1px solid var(--border);
    border-radius: 4px;
    cursor: pointer;
    color: var(--text-secondary);
}

.tab.active {
    background-color: var(--accent);
    color: var(--text-primary);
    border-color: var(--accent);
}

.tab-content {
    display: none;
}

.tab-content.active {
    display: block;
}

.charts-container {
    margin-top: 2rem;
}

.chart-wrapper {
    position: relative;
    height: 60vh;
    min-height: 300px;
    max-height: 600px;
    width: 100%;
    margin: 20px 0;
}

@media (max-width: 768px) {
    .chart-wrapper {
        height: 70vh;
        min-height: 250px;
    }
}

.balance-card {
    cursor: pointer;
    transition: transform 0.2s;
}

.balance-card:hover {
    transform: translateY(-2px);
}

.balance-card.selected {
    border: 1px solid var(--accent);
}

/* Update the modal positioning */
.modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    backdrop-filter: blur(4px);
    overflow-y: auto; /* Allow scrolling if modal is taller than viewport */
}

.modal-content {
    background-color: var(--bg-dark);
    position: relative;
    margin: 50px auto; /* Changed from percentage to fixed top margin */
    padding: 2rem;
    border: 1px solid var(--border);
    border-radius: 8px;
    width: 90%;
    max-width: 1200px;
    animation: modalSlideIn 0.3s ease-out;
}

/* Update the animation to slide from top */
@keyframes modalSlideIn {
    from {
        transform: translateY(-50px);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

/* Rest of the modal styles remain the same */
.modal-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
    margin-top: 1rem;
}

.modal-column {
    padding: 1rem;
    background-color: var(--bg-darker);
    border-radius: 8px;
    border: 1px solid var(--border);
}

.modal-column h3 {
    color: var(--text-primary);
    margin-bottom: 1rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid var(--border);
    font-size: 1.1rem;
}

.bet-details-item {
    display: flex;
    flex-direction: column;
    margin-bottom: 1rem;
}

.bet-details-label {
    color: var(--text-secondary);
    font-size: 0.85rem;
    margin-bottom: 0.25rem;
}

/* Responsive design for smaller screens */
@media (max-width: 768px) {
    .modal-grid {
        grid-template-columns: 1fr;
        gap: 1rem;
    }
    
    .modal-content {
        margin: 30px auto; /* Smaller margin for mobile */
        width: 95%;
    }
}

/* Style for the positive values */
.positive {
    color: var(--success);
}

/* Update close button positioning */
.close-modal {
    position: absolute;
    right: 1rem;
    top: 1rem;
    font-size: 1.5rem;
    cursor: pointer;
    color: var(--text-secondary);
    transition: color 0.2s;
    z-index: 1001;
}

.close-modal:hover {
    color: var(--text-primary);
}

/* Add these styles to your existing CSS */
.status-open {
    background-color: var(--accent);
    color: white;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    display: inline-block;
    font-size: 0.85rem;
    font-weight: 600;
    width: 90px;
}

th.asc::after {
    content: ' ▲'; /* Up arrow for ascending */
}

th:not(.asc)::after {
    content: ' ▼'; /* Down arrow for descending */
}
